type Policy {
    _id: ID!
    role_id: ID!
    resource_id: ID!
    act: String
}
type Mutation {
    addPolicy(roleName: String!, resourceName: String!, act: String): IsMutationSuccess
}
# ------------------------------------------------------------------------------------
type Resource {
    _id: ID!
    name: String
}
type Query {
    queryResources: [Resource]
}
type Mutation {
    insertResources: [Resource]
    removeAllResource: String
}
# ------------------------------------------------------------------------------------
type Role {
    _id: ID!
    name: String!
}
type Query {
    queryRoles: [Role]
}
type Mutation {
    addRole(name: String!): IsMutationSuccess
}
# ------------------------------------------------------------------------------------
type IsMutationSuccess {
    isMutationSuccess: Boolean,
    msg: String
}
# ------------------------------------------------------------------------------------
type UserRole {
    _id: ID!
    user_id: ID!
    role_id: ID!
}
type Mutation {
    addUserRole(username: String, rolename: String): IsMutationSuccess
}
# ------------------------------------------------------------------------------------
type User {
    _id: ID!
    name: String! 
    email: String! @isRole
    password: String!
}
type Query {
    queryUsers: [User]
}